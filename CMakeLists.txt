PROJECT(fonzie) # the name of your project
CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0)
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/modules")
SET(CMAKE_BUILD_TYPE Debug)
SET(potrace_dir "potrace")

SET (QT_MIN_VERSION "4.5.0")
FIND_PACKAGE(Qt4 REQUIRED)
#SET (QT_DONT_USE_QTGUI TRUE)
SET (QT_MT_REQUIRED TRUE)
SET (QT_USE_QTXML TRUE )
#SET (QT_USE_QTSVG TRUE )
#SET (QT_USE_QTSQL TRUE )
#SET (QT_USE_QTNETWORK TRUE )
#SET (QT_USE_QTWEBKIT TRUE )
#SET (QT_USE_QTOPENGL TRUE )
INCLUDE( ${QT_USE_FILE} )


IF (QT_FOUND)
		MESSAGE(STATUS "Qt4 Found OK")
ELSE(QT_FOUND)
        MESSAGE(FATAL_ERROR "No Qt4 found")
ENDIF(QT_FOUND)



FIND_PACKAGE(Sane REQUIRED)
IF(SANE_FOUND)
  MESSAGE(STATUS "Sane Library Found OK")
ELSE(SANE_FOUND)
  MESSAGE(FATAL_ERROR "No Sane library found")
ENDIF(SANE_FOUND)

FIND_PACKAGE(Freetype REQUIRED)
IF(FREETYPE_FOUND)
  MESSAGE(STATUS "FreeType2 Library Found OK")
ELSE(FREETYPE_FOUND)
  MESSAGE(FATAL_ERROR "No Freetype found")
ENDIF(FREETYPE_FOUND)

IF(OCR)
FIND_PACKAGE(Tesseract REQUIRED)
IF(TESSERACT_FOUND)
	MESSAGE(STATUS "Tesseract Library Found OK")
	ADD_DEFINITIONS(-DWITH_TESSERACT)
	FIND_PACKAGE(PODOFO)
	IF(LIBPODOFO_FOUND)
		ADD_DEFINITIONS(-DWITH_PODOFO)
	ELSE(LIBPODOFO_FOUND)
	ENDIF(LIBPODOFO_FOUND)

ENDIF(TESSERACT_FOUND)
ENDIF(OCR)

IF(BOOK_SCANNER)
FIND_PACKAGE(PkgConfig)
pkg_check_modules(GPHOTO2 libgphoto2)
FIND_PACKAGE(Serial)
ENDIF(BOOK_SCANNER)

FIND_PACKAGE(Fontforge)
IF(FONTFORGE_FOUND)
  MESSAGE(STATUS "Fontforge Library Found OK")
  ADD_DEFINITIONS(-DWITH_FONTFORGE)
ENDIF(FONTFORGE_FOUND)

ADD_DEFINITIONS(-DBUILD_TYPE_DEBUG)

ADD_SUBDIRECTORY(${potrace_dir})
ADD_SUBDIRECTORY(src)

